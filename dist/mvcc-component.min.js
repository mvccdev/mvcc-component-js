function mvccArrayToObject(t){let e=[...t];return Object.fromEntries(e.map((t=>[t.name,t.value])))}class MvccComponent extends HTMLElement{constructor(t={}){super(),this.state=t,this.props=mvccArrayToObject(this.attributes),this.root=this.attachShadow({mode:"open"}),this._render(),this.created()}_render(){this.removeAttribute("hidden"),this.props=mvccArrayToObject(this.attributes),1==this.rendering()&&(this.shadowRoot.innerHTML=this.render(this.state,this.props))}update(t){const e=this.state;1==this.updating(e)&&(this.state={...this.state,...t},this._render())}static register(t,e){window.customElements.define(t,e)}created(){}rendering(t,e){return!0}render(t,e){return""}updating(t){return!0}}
